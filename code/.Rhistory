P2
# Eimeria+pinworms vs Eimeria without pinworms
table(qpcr_intensity_data$Aspiculuris_Syphacia > 0)
# qpcrdata contains mice that have been investigated for both worms and eimeria
coinfDf <- qpcrdata[!is.na(rowSums(qpcrdata[c(l istWorms)])),] # N = 383
coinfDf$presence_pinworms <- as.numeric(coinfDf$Aspiculuris_Syphacia > 0)
source("DataPreparation.R")
# qpcrdata contains mice that have been investigated for both worms and eimeria
coinfDf <- qpcrdata[!is.na(rowSums(qpcrdata[c(listWorms)])),] # N = 383
coinfDf$presence_pinworms <- as.numeric(coinfDf$Aspiculuris_Syphacia > 0)
coinfDf$presence_eimeria_tissues <- as.numeric(as.character(coinfDf$presence_eimeria_tissues))
table(pinworms = coinfDf$presence_pinworms)
211 / (172+211) # 55% - 52.5% in the complete dataset
table(Eimeria = coinfDf$presence_eimeria_tissues)
70/(70+313) # 18%
table(Eimeria = coinfDf$presence_eimeria_tissues, pinworms = coinfDf$presence_pinworms)
sum(table(Eimeria = coinfDf$presence_eimeria_tissues, pinworms = coinfDf$presence_pinworms))
chisq.test(coinfDf$presence_eimeria_tissues, coinfDf$presence_pinworms)
summary(lm(presence_eimeria_tissues ~ presence_pinworms, data = coinfDf))
table(Eimeria = coinfDf$presence_eimeria_tissues, pinworms = coinfDf$presence_pinworms)
26/(26+146)
44/(44+167)
tabCoinf = table(Eimeria = coinfDf$presence_eimeria_tissues, pinworms = coinfDf$presence_pinworms)
chisq.test(coinfDf$presence_eimeria_tissues, coinfDf$presence_pinworms)
chisq.test(tabCoinf)
tabCoinf
summary(lm(presence_eimeria_tissues ~ presence_pinworms, data = coinfDf))
chisq.test(coinfDf$presence_eimeria_tissues, coinfDf$presence_pinworms)
summary(lm(presence_eimeria_tissues ~ presence_pinworms, data = coinfDf))
tabCoinf
146+26
rowSums(tabCoinf)
colSums(tabCoinf)
sum(colSums(tabCoinf))
sum(rowSums(tabCoinf))
source("DataPreparation.R")
# Plot all samples : pinworms
mapAllpinworms <- plotMap(df = pinwormsdata_bal)
# Plot infected samples : pinworms
mapInfpinworms <- plotMap(df = pinwormsdata_bal[pinwormsdata_bal$Aspiculuris_Syphacia >=1,])
# Plot all samples : eimeria (tissues)
mapAllqPCR <- plotMap(df = qpcrdata)
# Plot infected samples : eimeria (tissues)
mapInfqPCR <- plotMap(df = qpcrdata[qpcrdata$`delta_ct_max_MminusE+5` > 0,])
source("DataPreparation.R")
source("B_maps.R")
source("D_Models_parasiteLoads.R")
source("I_prevalenceAlongHI.R")
source("F_ModelBodyCondition.R")
# general map
geogDF <- rbind(data.frame(latmin = min(WATWMdata$Latitude), latmax = max(WATWMdata$Latitude),
lonmin = min(WATWMdata$Longtitude), lonmax = max(WATWMdata$Longtitude), transect = "watwm"),
data.frame(latmin = min(BALdata$Latitude), latmax = max(BALdata$Latitude),
lonmin = min(BALdata$Longitude), lonmax = max(BALdata$Longitude), transect = "bal"),
data.frame(latmin = min(BALdata$Latitude, WATWMdata$Latitude),
latmax = max(BALdata$Latitude, WATWMdata$Latitude),
lonmin = min(BALdata$Longitude, WATWMdata$Longtitude),
lonmax = max(BALdata$Longitude, WATWMdata$Longtitude), transect = "all"))
areaBothStudies <- get_map(location = c(0, 38, 30, 60),
source = "stamen",
maptype = "toner-lite",
zoom = 5)
# Create HI bar
HIgradientBar <- ggplot(data.frame(hi = seq(0,1,0.0001)),
aes(x=hi, y=1, fill = hi)) +
geom_tile() +
theme_void() +
scale_fill_gradient(low = "blue", high = "red")  +
scale_x_continuous(expand=c(.01,0)) +
scale_y_continuous(expand=c(0,0)) +
theme(legend.position = 'none')
# fig 2
figEimeria <- plot_grid(
annotate_figure(plot_grid(mapAllqPCR,
prevalenceAlongHIEimeria +
theme(legend.position = "none"),
HIgradientBar,
nrow = 3,
rel_heights = c(1.5, 1.3, 1/8))),
annotate_figure(plot_grid(mapInfqPCR,
plotInfEimeria,
HIgradientBar,
nrow = 3,
rel_heights = c(1.5, 1.3, 1/8)))
)
figEimeria
figEimeria
# Plot all samples : pinworms
mapAllpinworms <- plotMap(df = pinwormsdata_bal)
mapAllpinworms
# Plot all samples : pinworms
mapAllpinworms <- plotMap(df = pinwormsdata_bal)
mapAllpinworms
plotMap
## Define functions used for data analysis
area <- get_map(location = c(12, 51.5, 15, 53.5),
source = "stamen", maptype = "toner-lite")
plotMap <- function(df){
ggmap(area) +
geom_point(data = df, shape = 21, size = 2,
aes(Longitude, Latitude, fill = HI), alpha = .4) + # set up the points
scale_fill_gradient("Hybrid\nindex", high="red",low="blue") +
theme_bw() +
geom_rect(xmin = 12, xmax = 12.7, ymin = 51.5, ymax = 51.9, fill = "white") +
scale_bar(lon = 12.1, lat = 51.5, arrow_length = 10, arrow_distance = 20,
distance_lon = 20, distance_lat = 7, distance_legend = 10,
dist_unit = "km", orientation = TRUE, legend_size = 2,
arrow_north_size = 4) +
theme(legend.position = 'none', axis.ticks=element_blank())
}
# Plot all samples : pinworms
mapAllpinworms <- plotMap(df = pinwormsdata_bal)
mapAllpinworms
plotMap
ggmap(area)
get_map(location = c(12, 51.5, 15, 53.5),
source = "stamen", maptype = "toner-lite")
## Define functions used for data analysis
area <- get_map(location = c(12, 51.5, 15, 53.5),
source = "stamen", maptype = "toner-lite")
ggmap(area)
area <- get_map(location = c(12, 51.5, 15, 53.5),
source = "stamen", maptype = "toner-lite")
plotMap <- function(df){
ggmap(area) +
geom_point(data = df, shape = 21, size = 2,
aes(Longitude, Latitude, fill = HI), alpha = .4) + # set up the points
scale_fill_gradient("Hybrid\nindex", high="red",low="blue") +
theme_bw() +
geom_rect(xmin = 12, xmax = 12.7, ymin = 51.5, ymax = 51.9, fill = "white") +
scale_bar(lon = 12.1, lat = 51.5, arrow_length = 10, arrow_distance = 20,
distance_lon = 20, distance_lat = 7, distance_legend = 10,
dist_unit = "km", orientation = TRUE, legend_size = 2,
arrow_north_size = 4) +
theme(legend.position = 'none', axis.ticks=element_blank())
}
mapAllpinworms
mapAllpinworms <- plotMap(df = pinwormsdata_bal)
mapAllpinworms
area <- get_map(location = c(12, 51.5, 15, 53.5), zoom = 5,
source = "stamen", maptype = "toner-lite")
plotMap <- function(df){
ggmap(area) +
geom_point(data = df, shape = 21, size = 2,
aes(Longitude, Latitude, fill = HI), alpha = .4) + # set up the points
scale_fill_gradient("Hybrid\nindex", high="red",low="blue") +
theme_bw() +
geom_rect(xmin = 12, xmax = 12.7, ymin = 51.5, ymax = 51.9, fill = "white") +
scale_bar(lon = 12.1, lat = 51.5, arrow_length = 10, arrow_distance = 20,
distance_lon = 20, distance_lat = 7, distance_legend = 10,
dist_unit = "km", orientation = TRUE, legend_size = 2,
arrow_north_size = 4) +
theme(legend.position = 'none', axis.ticks=element_blank())
}
mapAllpinworms <- plotMap(df = pinwormsdata_bal)
mapAllpinworms
area <- get_map(location = c(12, 51.5, 15, 53.5), zoom = 10,
source = "stamen", maptype = "toner-lite")
plotMap <- function(df){
ggmap(area) +
geom_point(data = df, shape = 21, size = 2,
aes(Longitude, Latitude, fill = HI), alpha = .4) + # set up the points
scale_fill_gradient("Hybrid\nindex", high="red",low="blue") +
theme_bw() +
geom_rect(xmin = 12, xmax = 12.7, ymin = 51.5, ymax = 51.9, fill = "white") +
scale_bar(lon = 12.1, lat = 51.5, arrow_length = 10, arrow_distance = 20,
distance_lon = 20, distance_lat = 7, distance_legend = 10,
dist_unit = "km", orientation = TRUE, legend_size = 2,
arrow_north_size = 4) +
theme(legend.position = 'none', axis.ticks=element_blank())
}
mapAllpinworms <- plotMap(df = pinwormsdata_bal)
mapAllpinworms
area <- get_map(location = c(12, 51.5, 15, 53.5),
source = "stamen", maptype = "toner-lite")
plotMap <- function(df){
ggmap(area) +
geom_point(data = df, shape = 21, size = 2,
aes(Longitude, Latitude, fill = HI), alpha = .4) + # set up the points
scale_fill_gradient("Hybrid\nindex", high="red",low="blue") +
theme_bw() +
geom_rect(xmin = 12, xmax = 12.7, ymin = 51.5, ymax = 51.9, fill = "white") +
scale_bar(lon = 12.1, lat = 51.5, arrow_length = 10, arrow_distance = 20,
distance_lon = 20, distance_lat = 7, distance_legend = 10,
dist_unit = "km", orientation = TRUE, legend_size = 2,
arrow_north_size = 4) +
theme(legend.position = 'none', axis.ticks=element_blank())
}
mapAllpinworms <- plotMap(df = pinwormsdata_bal)
mapAllpinworms
area <- get_map(location = c(12, 51.5, 15, 53.5),
source = "stamen", maptype = "toner")
plotMap <- function(df){
ggmap(area) +
geom_point(data = df, shape = 21, size = 2,
aes(Longitude, Latitude, fill = HI), alpha = .4) + # set up the points
scale_fill_gradient("Hybrid\nindex", high="red",low="blue") +
theme_bw() +
geom_rect(xmin = 12, xmax = 12.7, ymin = 51.5, ymax = 51.9, fill = "white") +
scale_bar(lon = 12.1, lat = 51.5, arrow_length = 10, arrow_distance = 20,
distance_lon = 20, distance_lat = 7, distance_legend = 10,
dist_unit = "km", orientation = TRUE, legend_size = 2,
arrow_north_size = 4) +
theme(legend.position = 'none', axis.ticks=element_blank())
}
mapAllpinworms <- plotMap(df = pinwormsdata_bal)
mapAllpinworms
area <- get_stamenmap(location = c(12, 51.5, 15, 53.5), maptype = "toner-lite")
area <- get_stamenmap(bbox = c(12, 51.5, 15, 53.5), maptype = "toner-lite")
plotMap <- function(df){
ggmap(area) +
geom_point(data = df, shape = 21, size = 2,
aes(Longitude, Latitude, fill = HI), alpha = .4) + # set up the points
scale_fill_gradient("Hybrid\nindex", high="red",low="blue") +
theme_bw() +
geom_rect(xmin = 12, xmax = 12.7, ymin = 51.5, ymax = 51.9, fill = "white") +
scale_bar(lon = 12.1, lat = 51.5, arrow_length = 10, arrow_distance = 20,
distance_lon = 20, distance_lat = 7, distance_legend = 10,
dist_unit = "km", orientation = TRUE, legend_size = 2,
arrow_north_size = 4) +
theme(legend.position = 'none', axis.ticks=element_blank())
}
mapAllpinworms <- plotMap(df = pinwormsdata_bal)
mapAllpinworms
area <- get_stamenmap(bbox = c(12, 51.5, 15, 53.5), maptype = "toner-lite", zoom = 7)
plotMap <- function(df){
ggmap(area) +
geom_point(data = df, shape = 21, size = 2,
aes(Longitude, Latitude, fill = HI), alpha = .4) + # set up the points
scale_fill_gradient("Hybrid\nindex", high="red",low="blue") +
theme_bw() +
geom_rect(xmin = 12, xmax = 12.7, ymin = 51.5, ymax = 51.9, fill = "white") +
scale_bar(lon = 12.1, lat = 51.5, arrow_length = 10, arrow_distance = 20,
distance_lon = 20, distance_lat = 7, distance_legend = 10,
dist_unit = "km", orientation = TRUE, legend_size = 2,
arrow_north_size = 4) +
theme(legend.position = 'none', axis.ticks=element_blank())
}
mapAllpinworms <- plotMap(df = pinwormsdata_bal)
mapAllpinworms
area <- get_stamenmap(bbox = c(12, 51.5, 15, 53.5), maptype = "toner-lite", zoom = 8)
plotMap <- function(df){
ggmap(area) +
geom_point(data = df, shape = 21, size = 2,
aes(Longitude, Latitude, fill = HI), alpha = .4) + # set up the points
scale_fill_gradient("Hybrid\nindex", high="red",low="blue") +
theme_bw() +
geom_rect(xmin = 12, xmax = 12.7, ymin = 51.5, ymax = 51.9, fill = "white") +
scale_bar(lon = 12.1, lat = 51.5, arrow_length = 10, arrow_distance = 20,
distance_lon = 20, distance_lat = 7, distance_legend = 10,
dist_unit = "km", orientation = TRUE, legend_size = 2,
arrow_north_size = 4) +
theme(legend.position = 'none', axis.ticks=element_blank())
}
mapAllpinworms <- plotMap(df = pinwormsdata_bal)
mapAllpinworms
# after update ggmap, change area to keep stamen-lite type
area <- get_stamenmap(bbox = c(12, 51.5, 15, 53.5), maptype = "toner-lite", zoom = 8)
# Plot all samples : pinworms
mapAllpinworms <- plotMap(df = pinwormsdata_bal)
# Plot infected samples : pinworms
mapInfpinworms <- plotMap(df = pinwormsdata_bal[pinwormsdata_bal$Aspiculuris_Syphacia >=1,])
# Plot all samples : eimeria (tissues)
mapAllqPCR <- plotMap(df = qpcrdata)
# Plot infected samples : eimeria (tissues)
mapInfqPCR <- plotMap(df = qpcrdata[qpcrdata$`delta_ct_max_MminusE+5` > 0,])
mapAllpinworms
pdf(file = "../figures/figure 2 and 3 better quality maps/fig2A.pdf", width = 15)
mapAllpinworms
dev.off()
pdf(file = "../figures/figure 2 and 3 better quality maps/fig2A.pdf", width = 20)
mapAllpinworms
dev.off()
mapAllpinworms
ggsave(filename = "../figures/figure 2 and 3 better quality maps/fig2A.pdf",
dpi = 300)
ggsave(filename = "../figures/figure 2 and 3 better quality maps/fig2A.pdf",
dpi = 1000)
ggsave(filename = "../figures/figure 2 and 3 better quality maps/fig2A.pdf",
dpi = 2000)
ggsave(filename = "../figures/figure 2 and 3 better quality maps/fig2A.pdf", device = "pdf",
dpi = 2000)
ggsave(filename = "../figures/figure 2 and 3 better quality maps/fig2A.pdf", device = "pdf",
dpi = 6000)
pdf(file = "../figures/figure 2 and 3 better quality maps/fig2A.pdf", height = 50, width = 50)
mapAllpinworms
dev.off()
mapAllpinworms
pdf(file = "../figures/figure 2 and 3 better quality maps/fig2A.pdf", height = 30, width = 30)
mapAllpinworms
dev.off()
pdf(file = "../figures/figure 2 and 3 better quality maps/fig2A.pdf", height = 10, width = 10)
mapAllpinworms
dev.off()
pdf(file = "../figures/figure 2 and 3 better quality maps/fig2A.pdf", height = 50, width = 50)
mapAllpinworms
dev.off()
dev.off()
mapAllpinworms
dev.off()
mapAllpinworms
pdf(file = "../figures/figure 2 and 3 better quality maps/fig2A.pdf", height = 50, width = 50)
mapAllpinworms
dev.off()
pdf(file = "../figures/figure 2 and 3 better quality maps/fig2A.pdf", height = 30, width = 30)
mapAllpinworms
dev.off()
# get_cloudmademap accesses a tile server for Stamen Maps and downloads/stitches map tiles/formats
# a map image. This function requires an api key which can be obtained for free from http://cloudmade.com/user/show
# (defunct?). Thousands of maptypes ("styles"), including create-your-own options, are available
# from http://maps.cloudmade.com/editor (defunct).
get_cloudmademap(bbox = c(left = -95.80204, bottom = 29.38048, right =
-94.92313, top = 30.14344), zoom = 10, api_key, maptype = 1,
highres = TRUE, crop = TRUE, messaging = FALSE, urlonly = FALSE,
filename = NULL, color = c("color", "bw"), ...)
# get_cloudmademap accesses a tile server for Stamen Maps and downloads/stitches map tiles/formats
# a map image. This function requires an api key which can be obtained for free from http://cloudmade.com/user/show
# (defunct?). Thousands of maptypes ("styles"), including create-your-own options, are available
# from http://maps.cloudmade.com/editor (defunct).
get_cloudmademap(bbox = c(left = -95.80204, bottom = 29.38048, right =
-94.92313, top = 30.14344), zoom = 10, api_key, maptype = 1,
highres = TRUE, crop = TRUE, messaging = FALSE, urlonly = FALSE,
filename = NULL, color = c("color", "bw"))
# get_cloudmademap accesses a tile server for Stamen Maps and downloads/stitches map tiles/formats
# a map image. This function requires an api key which can be obtained for free from http://cloudmade.com/user/show
# (defunct?). Thousands of maptypes ("styles"), including create-your-own options, are available
# from http://maps.cloudmade.com/editor (defunct).
get_cloudmademap(bbox = c(left = -95.80204, bottom = 29.38048, right =
-94.92313, top = 30.14344), zoom = 10, api_key, maptype = 1,
highres = TRUE, crop = TRUE, messaging = FALSE, urlonly = FALSE,
filename = NULL, color = c("color", "bw"))
install.packages("mapdata")
# after update ggmap, change area to keep stamen-lite type
area <- get_stamenmap(bbox = c(12, 51.5, 15, 53.5), maptype = "toner-lite", zoom = 8)
pdf(file = "../figures/figure 2 and 3 better quality maps/test.pdf", height = 30, width = 30)
area
dev.off()
pdf(file = "../figures/figure 2 and 3 better quality maps/test.pdf", height = 30, width = 30)
ggplot(area)
dev.off()
ggplot(area)
ggmap(area)
pdf(file = "../figures/figure 2 and 3 better quality maps/test.pdf", height = 30, width = 30)
ggmap(area)
dev.off()
pdf(file = "../figures/figure 2 and 3 better quality maps/test.pdf", height = 5, width = 5)
ggmap(area)
dev.off()
pdf(file = "../figures/figure 2 and 3 better quality maps/test.pdf", height = 5, width = 5, pointsize = 5)
ggmap(area)
dev.off()
pdf(file = "../figures/figure 2 and 3 better quality maps/test.pdf", height = 5, width = 5, pointsize = 20)
ggmap(area)
dev.off()
# after update ggmap, change area to keep stamen-lite type
area <- get_stamenmap(bbox = c(12, 51.5, 15, 53.5), maptype = "toner-lite", zoom = 8, type = "pdf")
# after update ggmap, change area to keep stamen-lite type
area <- get_stamenmap(bbox = c(12, 51.5, 15, 53.5), maptype = "toner-lite", zoom = 8, format = "pdf")
pdf(file = "../figures/figure 2 and 3 better quality maps/test.pdf", height = 5, width = 5, pointsize = 20)
ggmap(area)
dev.off()
# after update ggmap, change area to keep stamen-lite type
# area <- get_stamenmap(bbox = c(12, 51.5, 15, 53.5), maptype = "toner-lite", zoom = 8, format = "pdf")
area <- get_openstreetmap(bbox = c(12, 51.5, 15, 53.5), maptype = "toner-lite", zoom = 8, format = "pdf")
# after update ggmap, change area to keep stamen-lite type
area <- get_stamenmap(bbox = c(12, 51.5, 15, 53.5), maptype = "toner-lite", zoom = 8, format = "pdf")
ggmap(area)
ggsave(filename="../figures/figure 2 and 3 better quality maps/test.svg",
plot=ggmap(area),width=10,height=8,units="cm")
ggsave(filename="../figures/figure 2 and 3 better quality maps/test.svg",
plot=ggmap(area),width=10,height=8,units="cm")
ggsave(filename="../figures/figure 2 and 3 better quality maps/test.svg", device = "svg",
plot=ggmap(area),width=10,height=8,units="cm")
dev.off()
ggsave(filename="../figures/figure 2 and 3 better quality maps/test.svg", device = "svg",
plot=ggmap(area),width=10,height=8,units="cm")
install.packages("svglite")
library(svglite)
ggsave(filename="../figures/figure 2 and 3 better quality maps/test.svg", device = "svg",
plot=ggmap(area))
ggsave(filename="../figures/figure 2 and 3 better quality maps/test.pdf", device = "pdf",
plot=ggmap(area))
ggsave(filename="../figures/figure 2 and 3 better quality maps/test.pdf", device = "svg",
plot=ggmap(area))
install.packages("svglite")
install.packages("svglite")
install.packages("svglite")
library(svglite)
ggsave(filename="../figures/figure 2 and 3 better quality maps/test.svg", device = "svg",
plot=ggmap(area))
ggsave(filename="../figures/figure 2 and 3 better quality maps/test.svg", device = "svg",
plot=ggmap(area), width = 15, height = 15)
ggsave(filename="../figures/figure 2 and 3 better quality maps/test.svg", device = "svg",
plot=ggmap(area), width = 15, height = 15, dpi = 1000)
ggsave(filename="../figures/figure 2 and 3 better quality maps/test.svg", device = "svg",
plot=ggmap(area), width = 15, height = 15, dpi = 1000)
# after update ggmap, change area to keep stamen-lite type
area <- get_stamenmap(bbox = c(12, 51.5, 15, 53.5), maptype = "toner-lite", zoom = 8, format = "svg")
pdf(file = "../figures/figure 2 and 3 better quality maps/test.pdf", height = 5, width = 5, pointsize = 20)
ggmap(area)
dev.off()
dev.off()
pdf(file = "../figures/figure 2 and 3 better quality maps/test.pdf", height = 5, width = 5, pointsize = 20)
ggmap(area)
dev.off()
ggmap(area)
area
ggmap(area)
ggsave(filename="../figures/figure 2 and 3 better quality maps/test.svg", device = "svg",
plot=ggmap(area), width = 15, height = 15, dpi = 1000)
install.packages("rmapzen")
library(rmapzen)
install.packages("rmapzen")
install.packages("rmapzen")
install.packages("rmapzen")
install.packages("rmapzen")
library(rmapzen)
install.packages("rmapzen")
install.packages("rmapzen", dependencies = TRUE)
install.packages("rmapzen")
library(rmapzen)
install.packages("rmapzen")
library(rmapzen)
options(nextzen_API_key="../../keynextzen")
mz_set_tile_host_nextzen(key = getOption("nextzen_API_key"))
library(cancensus)
install.packages("cancensus")
library(cancensus)
victoria <- get_census(dataset='CA16',
regions=list(CSD=c("5917034","5917040","5917021","5917030","5917041","5917047")),
vectors=c(), labels="detailed", geo_format='sf', level='CT')
library(ggplot2)
ggplot(victoria)
mz_set_tile_host_nextzen(key = getOption("nextzen_API_key"))
options(nextzen_API_key="../../keynextzen")
mz_set_tile_host_nextzen(key = getOption("nextzen_API_key"))
library(cancensus)
victoria <- get_census(dataset='CA16',
regions=list(CSD=c("5917034","5917040","5917021","5917030","5917041","5917047")),
vectors=c(), labels="detailed", geo_format='sf', level='CT')
victoria <- get_census(dataset='CA16',
regions=list(CSD=c("5917034","5917040","5917021","5917030","5917041","5917047")),
vectors=c(), labels="detailed", geo_format='sf', level='CT', api_key = nextzen_API_key)
nextzen_API_key="../../keynextzen"
#install.packages("cancensus")
library(cancensus)
victoria <- get_census(dataset='CA16',
regions=list(CSD=c("5917034","5917040","5917021","5917030","5917041","5917047")),
vectors=c(), labels="detailed", geo_format='sf', level='CT', api_key = nextzen_API_key)
library(ggplot2)
ggplot(victoria)
victoria <- get_census(dataset='CA16',
regions=list(CSD=c("5917034","5917040","5917021","5917030","5917041","5917047")),
vectors=c(), labels="detailed", geo_format='sf', level='CT', api_key = "WSXYZzVVQ8GR_DUuIRl4LQ")
victoria <- get_census(dataset='CA16',
regions=list(CSD=c("5917034","5917040","5917021","5917030","5917041","5917047")),
vectors=c(), labels="detailed", geo_format='sf', level='CT', api_key = "WSXYZzVVQ8GR_DUuIRl4LQ")
# after update ggmap, change area to keep stamen-lite type
area <- get_stamenmap(bbox = c(12, 51.5, 15, 53.5), maptype = "toner-lite", zoom = 8, format = "svg")
ggsave(filename="../figures/figure 2 and 3 better quality maps/test.svg", device = "svg",
plot=ggmap(area), width = 15, height = 15, dpi = 1000)
ggmap(area)
# install.packages("mapdata")
# library(mapdata)
#
#
# install.packages("rmapzen")
# library(rmapzen)
#
#
# nextzen_API_key="../../keynextzen"
options(nextzen_API_key="../../keynextzen")
mz_set_tile_host_nextzen(key = getOption("nextzen_API_key"))
#install.packages("cancensus")
library(cancensus)
victoria <- get_census(dataset='CA16',
regions=list(CSD=c("5917034","5917040","5917021","5917030","5917041","5917047")),
vectors=c(), labels="detailed", geo_format='sf', level='CT', api_key = "WSXYZzVVQ8GR_DUuIRl4LQ")
vectors=c(), labels="detailed", geo_format='sf', level='CT'")
victoria <- get_census(dataset='CA16',
regions=list(CSD=c("5917034","5917040","5917021","5917030","5917041","5917047")),
vectors=c(), labels="detailed", geo_format='sf', level='CT')
?get_stamenmap()
get_stamenmap()
get_stamenmap
source("DataPreparation.R")
# after update ggmap, change area to keep stamen-lite type
area <- get_stamenmap(bbox = c(12, 51.5, 15, 53.5), maptype = "toner-lite", zoom = 8, format = "svg")
get_stamenmap()
get_stamenmap
map.cities(country="Germany", label=T, minpop=250)# cex = 1.5, capitals = c(0,1), col = "white")
ggmap(area)
map.cities(country="Germany", label=T, minpop=250)# cex = 1.5, capitals = c(0,1), col = "white")
# after update ggmap, change area to keep stamen-lite type
ggmap(get_stamenmap(bbox = c(12, 51.5, 15, 53.5), maptype = "toner-lite", zoom = 8, format = "svg", scale = 2))
# after update ggmap, change area to keep stamen-lite type
ggmap(get_stamenmap(bbox = c(12, 51.5, 15, 53.5), maptype = "toner-lite", zoom = 8, format = "svg", scale = 3))
# after update ggmap, change area to keep stamen-lite type
ggmap(get_stamenmap(bbox = c(12, 51.5, 15, 53.5), maptype = "toner-lite", zoom = 8, format = "svg", scale = 4))
# after update ggmap, change area to keep stamen-lite type
ggmap(get_stamenmap(bbox = c(12, 51.5, 15, 53.5), maptype = "toner-lite", zoom = 8, format = "svg", scale = 5))
# after update ggmap, change area to keep stamen-lite type
s <- "element:geometry%7Ccolor:0xf5f5f5&style=element:labels%7Cvisibility:off&style=element:labels.icon%7Cvisibility:off&style=element:labels.text.fill%7Ccolor:0x616161&style=element:labels.text.stroke%7Ccolor:0xf5f5f5&style=feature:administrative%7Celement:geometry%7Cvisibility:off&style=feature:administrative.country%7Celement:geometry.stroke%7Ccolor:0x000000%7Cvisibility:on&style=feature:administrative.land_parcel%7Cvisibility:off&style=feature:administrative.land_parcel%7Celement:labels.text.fill%7Ccolor:0xbdbdbd&style=feature:administrative.neighborhood%7Cvisibility:off&style=feature:poi%7Cvisibility:off&style=feature:poi%7Celement:geometry%7Ccolor:0xeeeeee&style=feature:poi%7Celement:labels.text.fill%7Ccolor:0x757575&style=feature:poi.park%7Celement:geometry%7Ccolor:0xe5e5e5&style=feature:poi.park%7Celement:labels.text.fill%7Ccolor:0x9e9e9e&style=feature:road%7Cvisibility:off&style=feature:road%7Celement:geometry%7Ccolor:0xffffff&style=feature:road%7Celement:labels.icon%7Cvisibility:off&style=feature:road.arterial%7Celement:labels.text.fill%7Ccolor:0x757575&style=feature:road.highway%7Celement:geometry%7Ccolor:0xdadada&style=feature:road.highway%7Celement:labels.text.fill%7Ccolor:0x616161&style=feature:road.local%7Celement:labels.text.fill%7Ccolor:0x9e9e9e&style=feature:transit%7Cvisibility:off&style=feature:transit.line%7Celement:geometry%7Ccolor:0xe5e5e5&style=feature:transit.station%7Celement:geometry%7Ccolor:0xeeeeee&style=feature:water%7Celement:geometry%7Ccolor:0xc9c9c9&style=feature:water%7Celement:labels.text.fill%7Ccolor:0x9e9e9e&size=480x360"
ggmap(get_stamenmap(bbox = c(12, 51.5, 15, 53.5), maptype = "toner-lite", zoom = 8, format = "svg", style =  s))
ggmap(get_stamenmap(bbox = c(12, 51.5, 15, 53.5), maptype = "toner", zoom = 8)
ggmap(get_stamenmap(bbox = c(12, 51.5, 15, 53.5), maptype = "toner", zoom = 8))
# after update ggmap, change area to keep stamen-lite type
ggmap(get_stamenmap(bbox = c(12, 51.5, 15, 53.5), maptype = "toner", zoom = 8))
# after update ggmap, change area to keep stamen-lite type
ggmap(get_stamenmap(bbox = c(12, 51.5, 15, 53.5), maptype = "toner-lite", zoom = 8))
# after update ggmap, change area to keep stamen-lite type
ggmap(get_stamenmap(bbox = c(12, 51.5, 15, 53.5), maptype = "toner-lite", zoom = 8))
